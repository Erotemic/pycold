# Abuse YAML notation to make a heredoc. This will be ignored by the CI.
.__doc__: &__doc__
    - | 

        # Note: expand yaml
        yaml merge-expand .gitlab-ci.yml _expandyml && cat _expandyml
         
        # GITLAB LINTER
        https://gitlab.kitware.com/smart/pycold/-/ci/lint

        * Make sure you add Runners to your project 
        https://gitlab.kitware.com/smart/pycold/-/settings/ci_cd 
        in Runners-> Shared Runners
        and Runners-> Available specific runners

        * Ensure that you are auto-cancel redundant pipelines.
        Navigate to https://gitlab.kitware.com/smart/pycold/-/settings/ci_cd and ensure "Auto-cancel redundant pipelines" is checked.

        More details are here https://docs.gitlab.com/ee/ci/pipelines/settings.html#auto-cancel-redundant-pipelines


# Abuse YAML notation to make a heredoc. This will be ignored by the CI.
stages:
    - lint
    - build
    - test
    - docker


### Conditionals ###

.if-merge-request: &if-merge-request
  if: >-
    $CI_MERGE_REQUEST_IID

.if-merged-into-default: &if-merged-into-default
  if: >-
    $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"


### TEMPLATES ###
# Define common templates using YAML anchors

.common_template:
    &common_template
    variables:
        PIP_CACHE_DIR:
            "$CI_PROJECT_DIR/.cache/pip"
        CONDA_PKGS_DIRS:
            "$CI_PROJECT_DIR/.cache/conda/pkgs"
        CONDA_ENVS_PATH:
            "$CI_PROJECT_DIR/.cache/conda/envs"
        XDG_CACHE_HOME:
            "$CI_PROJECT_DIR/.cache/xdg_cache"
    tags:
        - aws
        - docker
        - linux
        - linux-3.17
        - build
        - smart

.common_template_docker:
  &common_template_docker
  tags:
    - docker
    - linux
    - linux-3.17
    - build
    - aws
    - smart
  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY


.test_loose_template:
    &test_loose_template
    <<:
        *common_template
    stage:
        test

    before_script:
        - conda init bash
        - source ~/.bashrc
        - ls -al
        - conda env create -n loose-pycold-env python=3.8 --override-channels --channel conda-forge --prefix ".cache/conda/envs/loose-pycold-env"
        - conda activate ".cache/conda/envs/loose-pycold-env"
        # TODO cibuildwheel
        - python setup.py bdist_wheel
        - python -m pip install dist/pycold-0.1.0-cp38-cp38-linux_x86_64.whl
        # - python -m pip wheel .
        # - pip install -e .

    script:
        - python -c "import pycold; print(pycold.__file__)"
        - python -c "import pycold; print(pycold.__version__)"
          #- ./run_tests.py --network watch tests scripts

    after_script:
        - du -sh .cache/*
        - du -sh .cache/xdg_cache/*
        - du -sh .cache/conda/*
        - du -sh .cache/pip/*

    # Coverage is a regex that will parse the coverage from the test stdout
    coverage:
        '/TOTAL.+ ([0-9]{1,3}%)/'

    cache:
        key:
            loose-cache-v1
        paths:
            
            #- .cache/conda/envs/loose-watch-env  # better with or without this?
            - .cache/conda/pkgs
            - .cache/pip
            - .cache/xdg_cache


#.test_strict_template:
#    &test_strict_template
#    <<:
#        *common_template
#    stage:
#        test

#    before_script:
#        - conda init bash
#        - source ~/.bashrc
#        - ls -al
#        - ./dev/make_strict_req.sh
#        - conda env create -f conda_env_strict.yml --prefix ".cache/conda/envs/strict-watch-env"
#        - conda activate ".cache/conda/envs/strict-watch-env"
#        - pip install -e .
#    script:
#        - ./run_tests.py --network watch tests scripts

#    after_script:
#        - du -sh .cache/*
#        - du -sh .cache/xdg_cache/*
#        - du -sh .cache/conda/*
#        - du -sh .cache/pip/*

#    # Coverage is a regex that will parse the coverage from the test stdout
#    coverage:
#        '/TOTAL.+ ([0-9]{1,3}%)/'

#    cache:
#        key:
#            strict-cache-v1
#        paths:
            
#            #- .cache/conda/envs/strict-watch-env  # better with or without this?
#            - .cache/conda/pkgs
#            - .cache/pip
#            - .cache/xdg_cache


#### JOBS ###

test_full_loose/conda-linux:
    <<:
        *test_loose_template
    rules:
        - <<: *if-merge-request
        - <<: *if-merged-into-default
    image:
        gitlab.kitware.com:4567/computer-vision/ci-docker/miniconda3
    needs: []


#test_full_strict/conda-linux:
#    <<:
#        *test_strict_template
#    rules:
#        - <<: *if-merge-request
#        - <<: *if-merged-into-default
#    image:
#        gitlab.kitware.com:4567/computer-vision/ci-docker/miniconda3
#    needs: []
